# Generated by Django 4.2 on 2023-05-27 08:09

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tickets.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[tickets.models.validate_number])),
                ('description', models.CharField(blank=True, db_column='description', max_length=200, null=True)),
            ],
            options={
                'db_table': 'additional_service',
            },
        ),
        migrations.CreateModel(
            name='HumanTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[tickets.models.validate_number])),
                ('booking_date', models.DateTimeField(blank=True, help_text='date and time must be grater than now', null=True, validators=[django.core.validators.MinValueValidator(datetime.datetime(2023, 5, 27, 8, 9, 27, 803488, tzinfo=datetime.timezone.utc))])),
            ],
            options={
                'db_table': 'human_ticket',
            },
        ),
        migrations.CreateModel(
            name='RailwayCarriage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('Купе', 'Купе'), ('Плацкарт', 'Плацкарт'), ('СВ', 'СВ')], max_length=8)),
                ('number_of_seats', models.IntegerField(validators=[tickets.models.validate_seat_number])),
                ('seating_plan', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'railway_carriage',
            },
        ),
        migrations.CreateModel(
            name='RailwayStation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, db_column='description', max_length=200, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
            ],
            options={
                'db_table': 'railway_station',
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'route',
            },
        ),
        migrations.CreateModel(
            name='RoutePart',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('departure', models.DateTimeField(help_text='date and time must be grater than now', validators=[django.core.validators.MinValueValidator(datetime.datetime(2023, 5, 27, 8, 9, 27, 805200, tzinfo=datetime.timezone.utc))])),
                ('arrival', models.DateTimeField(help_text='date and time must be grater than now', validators=[django.core.validators.MinValueValidator(datetime.datetime(2023, 5, 27, 8, 9, 27, 805222, tzinfo=datetime.timezone.utc))])),
                ('order', models.IntegerField(validators=[tickets.models.validate_number])),
                ('route_uuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tickets.route')),
                ('start', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_route_parts', to='tickets.railwaystation')),
                ('stop_uuid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stop_route_parts', to='tickets.railwaystation')),
            ],
            options={
                'db_table': 'route_part',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('seat_number', models.IntegerField(validators=[tickets.models.validate_seat_number])),
                ('status', models.CharField(blank=True, choices=[('Booked', 'Booked'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Booked', max_length=10)),
                ('human_ticket', models.ForeignKey(db_column='human_ticket_info', on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.humanticket')),
                ('railway_carriage_info_uuid', models.ForeignKey(db_column='railway_carriage_info_uuid', on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.railwaycarriage')),
                ('route_part', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.routepart')),
            ],
            options={
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='TicketToAddService',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('add', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.additionalservice')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.ticket')),
            ],
            options={
                'db_table': 'ticket_to_add_service',
            },
        ),
        migrations.CreateModel(
            name='Passenger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone_number', models.TextField(null=True, validators=[tickets.models.validate_phone_number])),
                ('patronymic', models.CharField(max_length=20)),
                ('passport_data', models.TextField(validators=[tickets.models.validate_passport_data])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'passenger',
            },
        ),
        migrations.AddField(
            model_name='humanticket',
            name='passenger_info_id',
            field=models.ForeignKey(db_column='passenger_info_uuid', on_delete=django.db.models.deletion.DO_NOTHING, to='tickets.passenger'),
        ),
    ]
